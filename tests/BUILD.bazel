load(
    "@rules_haskell//haskell:protobuf.bzl",
    "haskell_proto_toolchain",
)
load(
    "protoc.bzl",
    "protoc_wrapper",
)

# This call creates a wrapper for the protoc executable which is needed on
# Windows when protoc.exe is compiled with clang since the executable depends on
# runtime DLLs from the mingw\bin folder.
protoc_wrapper("protoc")

# This toolchain is morally testonly. However, that would break our
# tests of haskell_library_rules: aspects of non-testonly
# proto_library rules (from com_google_protobuf) can't themselves be
# testonly.

haskell_proto_toolchain(
    name = "protobuf-toolchain",
    testonly = 0,
    plugin = "@stackage-exe//proto-lens-protoc",
    protoc = select({
        "@platforms//os:windows": ":protoc.cmd",
        "//conditions:default": "@com_google_protobuf//:protoc",
    }),
    deps = [
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:containers",
        "@stackage//:data-default-class",
        "@stackage//:deepseq",
        "@stackage//:lens-family",
        "@stackage//:lens-family-core",
        "@stackage//:mtl",
        "@stackage//:proto-lens",
        "@stackage//:proto-lens-runtime",
        "@stackage//:text",
        "@stackage//:vector",
    ],
)

filegroup(
    name = "all_files",
    testonly = True,
    srcs = glob(["**"]) + [
        "@rules_haskell//tests/package_configuration:all_files",
        "@rules_haskell//tests/shellcheck:all_files",
    ],
    visibility = ["//visibility:public"],
)
