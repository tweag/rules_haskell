load(
    "@rules_haskell//haskell:defs.bzl",
    "haskell_library",
    "haskell_test",
)

package(default_testonly = 1)

haskell_library(
    name = "root",
    srcs = ["Root.hs"],
    deps = ["//tests/hackage:base"],
)

haskell_library(
    name = "intermediate",
    exports = [":root"],
    deps = [":root"],
)

haskell_library(
    name = "intermediate1",
    exports = [":intermediate"],
    deps = [":intermediate"],
)

haskell_library(
    name = "intermediate2",
    exports = [":intermediate1"],
    deps = [":intermediate1"],
)

haskell_library(
    name = "intermediate3",
    exports = [":intermediate2"],
    deps = [":intermediate2"],
)

haskell_library(
    name = "intermediate4",
    exports = [],
    deps = [":intermediate2"],
)

haskell_library(
    name = "intermediate5",
    exports = [":intermediate4"],
    deps = [":intermediate4"],
)

haskell_library(
    name = "lib",
    exports = [":intermediate"],
    deps = [
        ":intermediate",
    ],
)

haskell_test(
    name = "final",
    srcs = ["Main.hs"],
    tags = ["manual"],
    deps = [
        ":lib",
        "//tests/hackage:base",
    ],
)

test_suite(
    name = "package-reexport-transitive",
    tags = ["manual"],
    tests = [":final"],
)

haskell_test(
    name = "final-long",
    srcs = ["Main.hs"],
    tags = ["manual"],
    deps = [
        ":intermediate3",
        "//tests/hackage:base",
    ],
)

test_suite(
    name = "long",
    tags = ["manual"],
    tests = [":final-long"],
)

haskell_test(
    name = "final-interrupted",
    srcs = ["Main.hs"],
    tags = ["manual"],
    deps = [
        ":intermediate5",
        "//tests/hackage:base",
    ],
)

test_suite(
    name = "interrupted",
    tags = ["manual"],
    tests = [":final-interrupted"],
)
