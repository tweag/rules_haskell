# Check that we manage to access the runfile while using the generate_paths_module attribute of haskell_cabal_library

load("@os_info//:os_info.bzl", "is_windows")
load(
    "@rules_haskell//haskell:cabal.bzl",
    "haskell_cabal_binary",
    "haskell_cabal_library",
)
load(
    "@rules_haskell//haskell:defs.bzl",
    "haskell_test",
    "haskell_toolchain_library",
)

package(default_testonly = 1)

haskell_toolchain_library(name = "base")

haskell_cabal_library(
    name = "lib",
    package_name = "lib-pkg",
    srcs = [
        "Lib.hs",
        "datafile",
        "lib.cabal",
    ],
    generate_paths_module = True,
    sublibrary_name = "sublib",
    tags = ["skip_profiling"],
    version = "0.1.0.0",
    visibility = ["//visibility:public"],
    deps = ["@rules_haskell//tools/runfiles"],
)

haskell_test(
    name = "test_paths_module",
    srcs = ["Main.hs"],
    tags = ["skip_profiling"],
    deps = [
        ":base",
        ":lib",
    ],
)

haskell_cabal_binary(
    name = "inside",
    srcs = [
        "Main.hs",
        "datafile",
        "lib.cabal",
    ],
    flags = [
        "use-base",
        "expose-lib",
    ],
    tags = ["skip_profiling"],
    deps = [":lib"],
)

sh_test(
    name = "direct_test_inside{}".format(".exe" if is_windows else ""),
    srcs = [":inside"],
    tags = ["skip_profiling"],
)

filegroup(
    name = "all_files",
    testonly = True,
    srcs = glob(["**"]),
    visibility = ["//visibility:public"],
)
