workspace(name = "arm_cross_example")

##########################
# rules_haskell preamble
##########################

local_repository(
    name = "rules_haskell",
    path = "../..",
)

load(
    "@rules_haskell//haskell:repositories.bzl",
    "rules_haskell_dependencies",
)

rules_haskell_dependencies()

load(
    "@rules_haskell//haskell:cabal.bzl",
    "stack_snapshot",
)
load("@rules_nixpkgs_cc//:cc.bzl", "nixpkgs_cc_configure")
load(
    "@rules_nixpkgs_core//:nixpkgs.bzl",
    "nixpkgs_git_repository",
    "nixpkgs_package",
)
load("@rules_nixpkgs_python//:python.bzl", "nixpkgs_python_configure")

nixpkgs_git_repository(
    name = "nixpkgs",
    revision = "d17a56d90ecbd1b8fc908d49598fb854ef188461",
)

nixpkgs_python_configure(
    repository = "@nixpkgs",
)

###########################################
# CC toolchains for x86 and arm
###########################################

nixpkgs_cc_configure(
    name = "nixpkgs_config_cc_x86",
    exec_constraints = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
    ],
    repository = "@nixpkgs",
    target_constraints = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
    ],
)

nixpkgs_cc_configure(
    name = "nixpkgs_config_cc_arm",
    attribute_path = "cc-aarch64",
    exec_constraints = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
    ],
    nix_file = "//:arm-cross.nix",
    repository = "@nixpkgs",
    target_constraints = [
        "@platforms//cpu:aarch64",
        "@platforms//os:linux",
    ],
)

###########################################
# GHC toolchains for x86 and arm
###########################################

load(
    "@rules_haskell//haskell:nixpkgs.bzl",
    "haskell_register_ghc_nixpkgs",
)

haskell_register_ghc_nixpkgs(
    name = "aarch64",
    attribute_path = "ghc-aarch64",
    exec_constraints = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
    ],
    nix_file = "//:arm-cross.nix",
    repository = "@nixpkgs",
    static_runtime = True,
    target_constraints = [
        "@platforms//cpu:aarch64",
        "@platforms//os:linux",
    ],
    version = "8.10.7",
)

haskell_register_ghc_nixpkgs(
    name = "x86",
    attribute_path = "haskell.compiler.ghc8107",
    exec_constraints = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
    ],
    repositories = {"nixpkgs": "@nixpkgs"},
    target_constraints = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
    ],
    version = "8.10.7",
)

############################
# zlib dependencies
############################

nixpkgs_package(
    name = "nixpkgs_zlib_x86",
    attribute_path = "zlib",
    repository = "@nixpkgs",
)

nixpkgs_package(
    name = "nixpkgs_zlib_arm",
    attribute_path = "pkgsCross.aarch64-multiplatform.zlib",
    repository = "@nixpkgs",
)

nixpkgs_package(
    name = "zlib.dev",
    build_file = "//:BUILD.zlib.bazel",
    repository = "@nixpkgs",
)

stack_snapshot(
    name = "stackage",
    extra_deps = {"zlib": ["@zlib.dev//:zlib"]},
    haddock = False,
    packages = ["zlib"],
    snapshot = "lts-18.0",
)
