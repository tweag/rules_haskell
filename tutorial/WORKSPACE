workspace(name = "rules_haskell_tutorial")

local_repository(
    name = "rules_haskell",
    path = "..",
)

load("@rules_haskell//haskell:repositories.bzl", "rules_haskell_dependencies")

rules_haskell_dependencies()

load("@rules_cc//cc:repositories.bzl", "rules_cc_dependencies", "rules_cc_toolchains")

rules_cc_dependencies()

rules_cc_toolchains()

load("@rules_cc//cc:extensions.bzl", "compatibility_proxy_repo")

compatibility_proxy_repo()

load("@rules_haskell//haskell:nixpkgs.bzl", "haskell_register_ghc_nixpkgs")

GHC_VERSION = "9.4.8"

haskell_register_ghc_nixpkgs(
    attribute_path = "haskell.compiler.ghc{}".format(GHC_VERSION.replace(".", "")),
    repository = "@rules_haskell//nixpkgs:default.nix",
    version = GHC_VERSION,
)

load("@rules_haskell//haskell:toolchain.bzl", "rules_haskell_toolchains")

rules_haskell_toolchains(
    dist = {
        "linux_amd64": "deb10",
    },
    version = GHC_VERSION,
)

load(
    "@io_tweag_rules_nixpkgs//nixpkgs:nixpkgs.bzl",
    "nixpkgs_cc_configure",
    "nixpkgs_python_configure",
)

nixpkgs_cc_configure(
    # Don't override the default cc toolchain needed for bindist mode.
    name = "nixpkgs_config_cc",
    cc_std = "c++14",
    repository = "@rules_haskell//nixpkgs:default.nix",
)

nixpkgs_python_configure(
    repository = "@rules_haskell//nixpkgs:default.nix",
)
