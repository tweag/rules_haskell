steps:
  - label: "Run tests (Nixpkgs)"
    command: |
      cat >.bazelrc.local <<EOF
      common --config=ci
      build --config=linux-nixpkgs --config=ci-linux-nixpkgs
      EOF
      nix-shell --arg docTools false --pure --run '
      set -e
      sandboxfs --version
      # Ensure that the Nixpkgs bazel version matches the one specified in
      # `.bazelversion` and fetched in
      # `.buildkite/bindists-pipeline` for the bindists version.
      .ci/check-bazel-version
      ./tests/run-start-script.sh --use-nix
      bazel build //tests:run-tests
      ./bazel-ci-bin/tests/run-tests
      bazel coverage //tests/... --build_tag_filters "coverage-compatible" --test_tag_filters "coverage-compatible" --test_output=all
      '
    timeout: 100

  - label: "Run tests (bindists)"
    command: |
      # The directories should exist before we call docker run because
      # otherwise they will be created but with root as owner which causes
      # troubles later.
      mkdir -p "$HOME/bindists/repo_cache"
      mkdir -p "$HOME/bindists/.cache/bazel"
      mkdir -p "$HOME/bindists/.stack"
      pushd .buildkite/image
      echo "RUN useradd -ms /bin/bash --uid $(id -u $USER) $USER" >> Dockerfile
      docker build . -t tweag/rules_haskell:latest
      popd
      # --network host is necessary because the computation inside the
      # container should have access to host's network. Otherwise features
      # like google default credentials do not work.
      docker run -it --network host \
        -v $(pwd):$HOME/rules_haskell:rw \
        -v $HOME/bindists/repo_cache:$HOME/repo_cache:rw \
        -v $HOME/bindists/.cache/bazel:$HOME/.cache/bazel:rw \
        -v $HOME/bindists/.stack:$HOME/.stack:rw \
        --workdir $HOME/rules_haskell \
        --user $USER \
        tweag/rules_haskell:latest \
        .buildkite/bindists-pipeline
    timeout: 100
